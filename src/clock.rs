use super::RegIO;

pub const RST_DEVICES_L: u32 = 0x4;
pub const RST_DEVICES_H: u32 = 0x8;
pub const RST_DEVICES_U: u32 = 0xC;
pub const CLK_OUT_ENB_L: u32 = 0x10;
pub const CLK_OUT_ENB_H: u32 = 0x14;
pub const CLK_OUT_ENB_U: u32 = 0x18;
pub const CCLK_BURST_POLICY: u32 = 0x20;
pub const SUPER_CCLK_DIVIDER: u32 = 0x24;
pub const SCLK_BURST_POLICY: u32 = 0x28;
pub const SUPER_SCLK_DIVIDER: u32 = 0x2C;
pub const CLK_SYSTEM_RATE: u32 = 0x30;
pub const MISC_CLK_ENB: u32 = 0x48;
pub const OSC_CTRL: u32 = 0x50;
pub const PLLM_BASE: u32 = 0x90;
pub const PLLM_OUT: u32 = 0x94;
pub const PLLM_MISC1: u32 = 0x98;
pub const PLLM_MISC2: u32 = 0x9c;
pub const PLLD_BASE: u32 = 0xD0;
pub const PLLD_MISC1: u32 = 0xD8;
pub const PLLD_MISC: u32 = 0xDC;
pub const PLLX_BASE: u32 = 0xE0;
pub const PLLX_MISC: u32 = 0xE4;
pub const PLLE_BASE: u32 = 0xE8;
pub const PLLE_MISC: u32 = 0xEC;
pub const PLLE_SS_CNTL1: u32 = 0xF0;
pub const PLLE_SS_CNTL2: u32 = 0xF4;
pub const LVL2_CLK_GATE_OVRA: u32 = 0xF8;
pub const LVL2_CLK_GATE_OVRB: u32 = 0xFC;
pub const LVL2_CLK_GATE_OVRC: u32 = 0x3A0;
pub const LVL2_CLK_GATE_OVRD: u32 = 0x3A4;
pub const LVL2_CLK_GATE_OVRE: u32 = 0x554;
pub const CLK_SOURCE_I2S2: u32 = 0x100;
pub const CLK_SOURCE_I2S3: u32 = 0x104;
pub const CLK_SOURCE_SPDIF_OUT: u32 = 0x108;
pub const CLK_SOURCE_SPDIF_IN: u32 = 0x10C;
pub const CLK_SOURCE_PWM: u32 = 0x110;
pub const CLK_SOURCE_SPI2: u32 = 0x118;
pub const CLK_SOURCE_SPI3: u32 = 0x11C;
pub const CLK_SOURCE_I2C1: u32 = 0x124;
pub const CLK_SOURCE_I2C5: u32 = 0x128;
pub const CLK_SOURCE_SPI1: u32 = 0x134;
pub const CLK_SOURCE_DISP1: u32 = 0x138;
pub const CLK_SOURCE_DISP2: u32 = 0x13C;
pub const CLK_SOURCE_ISP: u32 = 0x144;
pub const CLK_SOURCE_VI: u32 = 0x148;
pub const CLK_SOURCE_SDMMC1: u32 = 0x150;
pub const CLK_SOURCE_SDMMC2: u32 = 0x154;
pub const CLK_SOURCE_SDMMC4: u32 = 0x164;
pub const CLK_SOURCE_UARTA: u32 = 0x178;
pub const CLK_SOURCE_UARTB: u32 = 0x17C;
pub const CLK_SOURCE_HOST1X: u32 = 0x180;
pub const CLK_SOURCE_I2C2: u32 = 0x198;
pub const CLK_SOURCE_EMC: u32 = 0x19C;
pub const CLK_SOURCE_EMC_DLL: u32 = 0x664;
pub const CLK_SOURCE_UARTC: u32 = 0x1A0;
pub const CLK_SOURCE_VI_SENSOR: u32 = 0x1A8;
pub const CLK_SOURCE_SPI4: u32 = 0x1B4;
pub const CLK_SOURCE_I2C3: u32 = 0x1B8;
pub const CLK_SOURCE_SDMMC3: u32 = 0x1BC;
pub const CLK_SOURCE_UARTD: u32 = 0x1C0;
pub const CLK_SOURCE_OWR: u32 = 0x1CC;
pub const CLK_SOURCE_CSITE: u32 = 0x1D4;
pub const CLK_SOURCE_I2S1: u32 = 0x1D8;
pub const CLK_SOURCE_DTV: u32 = 0x1DC;
pub const CLK_SOURCE_TSEC: u32 = 0x1F4;
pub const CLK_SPARE2: u32 = 0x1FC;
pub const CLK_OUT_ENB_X: u32 = 0x280;
pub const CLK_ENB_X_SET: u32 = 0x284;
pub const CLK_ENB_X_CLR: u32 = 0x288;
pub const RST_DEVICES_X: u32 = 0x28C;
pub const RST_DEV_X_SET: u32 = 0x290;
pub const RST_DEV_X_CLR: u32 = 0x294;
pub const CLK_OUT_ENB_Y: u32 = 0x298;
pub const CLK_ENB_Y_SET: u32 = 0x29C;
pub const CLK_ENB_Y_CLR: u32 = 0x2A0;
pub const RST_DEVICES_Y: u32 = 0x2A4;
pub const RST_DEV_Y_SET: u32 = 0x2A8;
pub const RST_DEV_Y_CLR: u32 = 0x2AC;
pub const DFLL_BASE    : u32 = 0x2F4;
pub const RST_DEV_L_SET: u32 = 0x300;
pub const RST_DEV_L_CLR: u32 = 0x304;
pub const RST_DEV_H_SET: u32 = 0x308;
pub const RST_DEV_H_CLR: u32 = 0x30C;
pub const RST_DEV_U_SET: u32 = 0x310;
pub const RST_DEV_U_CLR: u32 = 0x314;
pub const CLK_ENB_L_SET: u32 = 0x320;
pub const CLK_ENB_L_CLR: u32 = 0x324;
pub const CLK_ENB_H_SET: u32 = 0x328;
pub const CLK_ENB_H_CLR: u32 = 0x32C;
pub const CLK_ENB_U_SET: u32 = 0x330;
pub const CLK_ENB_U_CLR: u32 = 0x334;
pub const CCPLEX_PG_SM_OVRD: u32 = 0x33C;
pub const RST_CPU_CMPLX_SET: u32 = 0x340;
pub const RST_DEVICES_V: u32 = 0x358;
pub const RST_DEVICES_W: u32 = 0x35C;
pub const CLK_OUT_ENB_V: u32 = 0x360;
pub const CLK_OUT_ENB_W: u32 = 0x364;
pub const CCLKG_BURST_POLICY: u32 = 0x368;
pub const SUPER_CCLKG_DIVIDER: u32 = 0x36C;
pub const CCLKLP_BURST_POLICY: u32 = 0x370;
pub const SUPER_CCLKLP_DIVIDER: u32 = 0x374;
pub const CPU_SOFTRST_CTRL: u32 = 0x380;
pub const CPU_SOFTRST_CTRL1: u32 = 0x384;
pub const CPU_SOFTRST_CTRL2: u32 = 0x388;
pub const CLK_SOURCE_MSELECT: u32 = 0x3B4;
pub const CLK_SOURCE_TSENSOR: u32 = 0x3B8;
pub const CLK_SOURCE_I2S4: u32 = 0x3BC;
pub const CLK_SOURCE_I2S5: u32 = 0x3C0;
pub const CLK_SOURCE_I2C4: u32 = 0x3C4;
pub const CLK_SOURCE_AHUB: u32 = 0x3D0;
pub const CLK_SOURCE_HDA2CODEC_2X: u32 = 0x3E4;
pub const CLK_SOURCE_ACTMON: u32 = 0x3E8;
pub const CLK_SOURCE_EXTPERIPH1: u32 = 0x3EC;
pub const CLK_SOURCE_EXTPERIPH2: u32 = 0x3F0;
pub const CLK_SOURCE_EXTPERIPH3: u32 = 0x3F4;
pub const CLK_SOURCE_I2C_SLOW: u32 = 0x3FC;
pub const CLK_SOURCE_SYS: u32 = 0x400;
pub const CLK_SOURCE_ISPB: u32 = 0x404;
pub const CLK_SOURCE_SOR1: u32 = 0x410;
pub const CLK_SOURCE_SOR0: u32 = 0x414;
pub const CLK_SOURCE_HDA: u32 = 0x428;
pub const CLK_SOURCE_SE: u32 = 0x42C;
pub const RST_DEV_V_CLR: u32 = 0x434;
pub const RST_DEV_W_SET: u32 = 0x438;
pub const RST_DEV_W_CLR: u32 = 0x43C;
pub const CLK_ENB_V_SET: u32 = 0x440;
pub const CLK_ENB_V_CLR: u32 = 0x444;
pub const CLK_ENB_W_SET: u32 = 0x448;
pub const CLK_ENB_W_CLR: u32 = 0x44C;
pub const RST_CPUG_CMPLX_CLR: u32 = 0x454;
pub const PLLX_MISC_3: u32 = 0x518;
pub const SPARE_REG0: u32 = 0x55C;
pub const PLLMB_BASE: u32 = 0x5E8;
pub const CLK_SOURCE_XUSB_CORE_HOST: u32 = 0x600;
pub const CLK_SOURCE_XUSB_FALCON: u32 = 0x604;
pub const CLK_SOURCE_XUSB_FS: u32 = 0x608;
pub const CLK_SOURCE_XUSB_CORE_DEV: u32 = 0x60C;
pub const CLK_SOURCE_XUSB_SS: u32 = 0x610;
pub const CLK_SOURCE_CILAB: u32 = 0x614;
pub const CLK_SOURCE_CILCD: u32 = 0x618;
pub const CLK_SOURCE_CILEF: u32 = 0x61C;
pub const CLK_SOURCE_DSIA_LP: u32 = 0x620;
pub const CLK_SOURCE_DSIB_LP: u32 = 0x624;
pub const CLK_SOURCE_ENTROPY: u32 = 0x628;
pub const CLK_SOURCE_DVFS_REF: u32 = 0x62C;
pub const CLK_SOURCE_DVFS_SOC: u32 = 0x630;
pub const CLK_SOURCE_EMC_LATENCY: u32 = 0x640;
pub const CLK_SOURCE_SOC_THERM: u32 = 0x644;
pub const CLK_SOURCE_DMIC1: u32 = 0x64C;
pub const CLK_SOURCE_DMIC2: u32 = 0x650;
pub const CLK_SOURCE_VI_SENSOR2: u32 = 0x658;
pub const CLK_SOURCE_I2C6: u32 = 0x65C;
pub const CLK_SOURCE_MIPIBIF: u32 = 0x660;
pub const CLK_SOURCE_UART_FST_MIPI_CAL: u32 = 0x66C;
pub const CLK_SOURCE_VIC: u32 = 0x678;
pub const CLK_SOURCE_SDMMC_LEGACY_TM: u32 = 0x694;
pub const CLK_SOURCE_NVDEC: u32 = 0x698;
pub const CLK_SOURCE_NVJPG: u32 = 0x69C;
pub const CLK_SOURCE_NVENC: u32 = 0x6A0;
pub const PLLA1_BASE: u32 = 0x6A4;
pub const PLLA1_MISC_0: u32 = 0x6A8;
pub const PLLA1_MISC_1: u32 = 0x6AC;
pub const PLLA1_MISC_2: u32 = 0x6B0;
pub const PLLA1_MISC_3: u32 = 0x6B4;
pub const AUDIO_SYNC_CLK_DMIC3: u32 = 0x6B8;
pub const CLK_SOURCE_DMIC3: u32 = 0x6BC;
pub const CLK_SOURCE_APE: u32 = 0x6C0;
pub const CLK_SOURCE_QSPI: u32 = 0x6C4;
pub const CLK_SOURCE_VI_I2C: u32 = 0x6C8;
pub const CLK_SOURCE_USB2_HSIC_TRK: u32 = 0x6CC;
pub const CLK_SOURCE_PEX_SATA_USB_RX_BYP: u32 = 0x6D0;
pub const CLK_SOURCE_MAUD: u32 = 0x6D4;
pub const CLK_SOURCE_TSECB: u32 = 0x6D8;
pub const CLK_CPUG_MISC1: u32 = 0x6DC;

pub struct Clock {
}

impl RegIO for Clock {
    const REG_BASE: u32 = super::CLOCK_BASE;
}